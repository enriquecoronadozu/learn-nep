<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials_neps on NEP</title>
    <link>https://enriquecoronadozu.github.io/learn-nep/tutorials_nep/</link>
    <description>Recent content in Tutorials_neps on NEP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Thu, 09 Mar 2017 00:11:02 +0100</lastBuildDate>
    
	<atom:link href="https://enriquecoronadozu.github.io/learn-nep/tutorials_nep/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Node Primitives (NEP)</title>
      <link>https://enriquecoronadozu.github.io/learn-nep/tutorials_nep/</link>
      <pubDate>Thu, 09 Mar 2017 00:11:02 +0100</pubDate>
      
      <guid>https://enriquecoronadozu.github.io/learn-nep/tutorials_nep/</guid>
      <description>This tutorial explains how to communicate different nodes using the different patterns supported in NEP  Client-Server In the Client-Server pattern a node (Client) sends a request for some data to other node (Server) and then waits for the response to this request. An example of how to create a simple client-server application is shown bellow:
Creates a client The next Python script shown a simple example of a client node.</description>
    </item>
    
  </channel>
</rss>